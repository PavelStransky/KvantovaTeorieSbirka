%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 360 360
%%LanguageLevel: 3
%%Creator: OriginLab Corporation
%%Title: (D:\Pavel\Desktop\iho.eps)
%%CreationDate: Wed Mar 09 16:11:33 2016
%%DocumentFonts: 
%%+ ArialItalic
%%+ Arial
%%+ Arial
%%DocumentNeededFonts: 
%%+ ArialItalic
%%+ Arial
%%+ Arial
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 360 360 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.471191 0.471348 sc

/initmtx mtx cmtx def
[0.50935 -0 0 -0.509186 0 763.767] concat
gs
90 904 m
90 904 l
8 sw
1 sj
1 scap
st
210 904 m
210 904 l
st
330 904 m
330 904 l
st
450 904 m
450 904 l
st
570 904 m
570 904 l
st
690 904 m
690 904 l
st
810 904 m
810 904 l
st
930 904 m
930 904 l
st
1050 904 m
1050 904 l
st
1170 904 m
1170 904 l
st
1290 904 m
1290 904 l
st
30 904 m
1350 904 l
st
690 1470 m
690 1470 l
st
690 1281 m
690 1281 l
st
690 1093 m
690 1093 l
st
690 904 m
690 904 l
st
690 716 m
690 716 l
st
690 527 m
690 527 l
st
690 339 m
690 339 l
st
690 150 m
690 150 l
st
690 1470 m
690 150 l
st
gs
pathproc 30 150 1321 1321 np rectpath
/eocl cland
np exec
90 -2867 m
90 -2867 m
90 1376 l
102 1357 l
114 1339 l
126 1321 l
138 1303 l
150 1286 l
162 1269 l
174 1253 l
186 1237 l
198 1221 l
210 1206 l
222 1191 l
234 1177 l
246 1162 l
258 1149 l
270 1135 l
282 1122 l
294 1110 l
306 1097 l
318 1086 l
330 1074 l
342 1063 l
354 1052 l
366 1042 l
378 1032 l
390 1022 l
402 1013 l
414 1004 l
426 996 l
438 987 l
450 980 l
462 972 l
474 965 l
486 959 l
498 953 l
510 947 l
522 941 l
534 936 l
546 931 l
558 927 l
570 923 l
582 920 l
594 916 l
606 914 l
618 911 l
630 909 l
642 907 l
654 906 l
666 905 l
678 904 l
690 904 l
702 904 l
714 905 l
726 906 l
738 907 l
750 909 l
762 911 l
774 914 l
786 916 l
798 920 l
810 923 l
822 927 l
834 931 l
846 936 l
858 941 l
870 947 l
882 953 l
894 959 l
906 965 l
918 972 l
930 980 l
942 987 l
954 996 l
966 1004 l
978 1013 l
990 1022 l
1002 1032 l
1014 1042 l
1026 1052 l
1038 1063 l
1050 1074 l
1062 1086 l
1074 1097 l
1086 1110 l
1098 1122 l
1110 1135 l
1122 1149 l
1134 1162 l
1146 1177 l
1158 1191 l
1170 1206 l
1182 1221 l
1194 1237 l
1206 1253 l
1218 1269 l
1230 1286 l
1242 1303 l
1254 1321 l
1266 1339 l
1278 1357 l
1290 1376 l
1290 -2867 l
11 sw
1 0 0 rgb
st
gr
gs
pathproc 30 150 1321 1321 np rectpath
/eocl cland
np exec
30 1376 m
42 1376 l
3 sw
st
56 1376 m
68 1376 l
st
82 1376 m
94 1376 l
st
108 1376 m
120 1376 l
st
134 1376 m
146 1376 l
st
160 1376 m
172 1376 l
st
186 1376 m
198 1376 l
st
212 1376 m
224 1376 l
st
238 1376 m
250 1376 l
st
264 1376 m
276 1376 l
st
290 1376 m
302 1376 l
st
316 1376 m
328 1376 l
st
342 1376 m
354 1376 l
st
368 1376 m
380 1376 l
st
394 1376 m
406 1376 l
st
420 1376 m
432 1376 l
st
446 1376 m
458 1376 l
st
472 1376 m
484 1376 l
st
498 1376 m
510 1376 l
st
524 1376 m
536 1376 l
st
550 1376 m
562 1376 l
st
576 1376 m
588 1376 l
st
602 1376 m
614 1376 l
st
628 1376 m
640 1376 l
st
654 1376 m
666 1376 l
st
680 1376 m
692 1376 l
st
706 1376 m
718 1376 l
st
732 1376 m
744 1376 l
st
758 1376 m
770 1376 l
st
784 1376 m
796 1376 l
st
810 1376 m
822 1376 l
st
836 1376 m
848 1376 l
st
862 1376 m
874 1376 l
st
888 1376 m
900 1376 l
st
914 1376 m
926 1376 l
st
940 1376 m
952 1376 l
st
966 1376 m
978 1376 l
st
992 1376 m
1004 1376 l
st
1018 1376 m
1030 1376 l
st
1044 1376 m
1056 1376 l
st
1070 1376 m
1082 1376 l
st
1096 1376 m
1108 1376 l
st
1122 1376 m
1134 1376 l
st
1148 1376 m
1160 1376 l
st
1174 1376 m
1186 1376 l
st
1200 1376 m
1212 1376 l
st
1226 1376 m
1238 1376 l
st
1252 1376 m
1264 1376 l
st
1278 1376 m
1290 1376 l
st
1304 1376 m
1316 1376 l
st
1330 1376 m
1342 1376 l
st
gr
gs
1 -1 sc
/ArialItalic 110 self 1215 -878 m
(a)[61 ] xs
1 -1 sc
gr
gs
1 -1 sc
/Arial 110 self 675 -1069 m
( )[31 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
580 -898 tr
90 ro
/Arial 110 self 0 0 m
( )[31 ] xs
1 -1 sc
gr
gr
gs
gr
gs
1 -1 sc
/ArialItalic 110 self 107 -879 m
(-a)[37 61 ] xs
1 -1 sc
gr
gs
1 -1 sc
/Arial 130 self 601 -872 m
(0)[72 ] xs
1 -1 sc
gr
gs
1 -1 sc
/ArialItalic 130 self 648 -124 m
(E)[87 ] xs
1 -1 sc
gr
gs
1 -1 sc
/ArialItalic 110 self 1365 -933 m
(x)[55 ] xs
1 -1 sc
gr
gs
1 -1 sc
/ArialItalic 110 self 701 -1321 m
(E)[73 ] xs
1 -1 sc
1 -1 sc
/Arial 66 self 774 -1360 m
(0)[37 ] xs
1 -1 sc
gr
gs
1 -1 sc
1 0 0 rgb
/ArialItalic 120 self 1181 -112 m
(V)[80 ] xs
1 -1 sc
1 -1 sc
/Arial 120 self 1261 -112 m
(\()[40 ] xs
1 -1 sc
1 -1 sc
/ArialItalic 120 self 1301 -112 m
(x)[60 ] xs
1 -1 sc
1 -1 sc
/Arial 120 self 1361 -112 m
(\))[40 ] xs
1 -1 sc
gr
gs
1 -1 sc
/Arial 150 self 265 -134 m
(\(a\))[50 83 50 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
